{"version":3,"sources":["components/SubmitEvidence/SubmitEvidence.jsx","components/CreateClaim/CreateClaim.jsx","IPFS/ipfsPublish.js","components/ContractsNotDeployed/ContractsNotDeployed.jsx","components/ConnectToMetamask/metamask.svg","components/ConnectToMetamask/ConnectToMetamask.jsx","components/SafexMainDetails/SafexMainDetails.jsx","components/CreatePlan/CreatePlan.jsx","components/MyAccount/MyAccount.jsx","components/Navbar/Navbar.jsx","components/Loader/loading.gif","components/Loader/Loader.jsx","components/Claims/Claims.jsx","components/Plans/Plans.jsx","components/Funds/Funds.jsx","App.js","index.js"],"names":["SubmitEvidence","props","onFormSubmit","e","a","preventDefault","state","disputeId","Number","setLoadingToTrue","ipfsPublish","fileName","buffer","fileCid","fileURI","hash","path","evidenceObj","fileHash","fileTypeExtension","fileExtension","name","evidenceName","description","evidenceDescription","encoder","encode","JSON","stringify","cid","evidenceURI","submitEvidence","alert","captureFile","event","file","target","files","setState","split","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","TextEncoder","className","onSubmit","this","type","style","width","value","onChange","cols","rows","Component","web3","Web3","archon","Archon","CreateClaim","componentDidMount","arbitrator","getArbitrationCost","arbitratorContractAddress","arbitrationFeeWei","arbitrationFeeEth","utils","fromWei","planId","createClaim","to","data","from","Promise","resolve","reject","fetch","method","body","headers","then","response","json","success","catch","err","ContractsNotDeployed","textTransform","fontWeight","ConnectToMetamask","connectToMetamask","onClick","fontSize","letterSpacing","src","metamaskIcon","alt","marginLeft","SafexMainDetails","safexMainContract","methods","getSafexMainContractBalance","call","safexMainBalanceWei","safexMainBalanceEth","getTotalClaimsAllowed","claimsAllowed","safexMainContractAddress","plansCount","claimsCount","CreatePlan","hasCreatedPlan","accountAddress","userHasCreatedPlan","extraFeeEth","extraFeeWei","toWei","totalFunds","toString","totalPrice","metaevidenceObj","safexAgreementURI","category","title","aliases","question","rulingOptions","titles","descriptions","metaevidenceURI","createPlan","inheritorAddress","safexAgreementLink","href","required","MyAccount","accountBalance","Navbar","data-toggle","data-target","id","Loader","loadingGIF","Claims","myClaims","claims","filter","claim","claimedBy","arbitrable","getEvidence","evidence","console","log","data-parent","length","map","metaEvidenceId","evidenceGroupId","color","padding","scope","substr","slice","Plans","myPlans","plans","plan","planCurrentOwner","planCreatedBy","planInheritor","planFunds","Funds","fund","fundPriceEth","action","recoverPlanFunds","depositPlanFunds","App","componentWillMount","loadWeb3","loadBlockchainData","ethereum","currentProvider","eth","getAccounts","accounts","metamaskConnected","loading","getBalance","net","getId","networkId","networkDataSafexMain","SafexMain","networks","networkDataArbitrator","AutoAppealableArbitrator","address","Contract","abi","arbitratorContract","contractsDetected","i","enable","location","reload","setLoadingToFalse","_inheritor","_metaEvidence","_totalPrice","send","on","_planId","_evidence","_disputeId","_depositAmount","basename","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32fc416d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ipfsPublish from \"../../IPFS/ipfsPublish\";\n\nexport default class SubmitEvidence extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disputeId: \"\",\n      buffer: null,\n      fileName: \"\",\n      fileExtension: \"\",\n      evidenceName: \"\",\n      evidenceDescription: \"\",\n    };\n    this.encoder = new TextEncoder();\n  }\n\n  onFormSubmit = async (e) => {\n    e.preventDefault();\n    if (this.state.disputeId !== \"\" && this.state.disputeId !== null && Number(this.state.disputeId) >= 0) {\n      this.props.setLoadingToTrue();\n      const fileCid = await ipfsPublish(this.state.fileName, this.state.buffer);\n      const fileURI = `/ipfs/${fileCid[1].hash}${fileCid[0].path}`;\n      const evidenceObj = {\n        fileURI,\n        fileHash: fileCid[1].hash,\n        fileTypeExtension: this.state.fileExtension,\n        name: this.state.evidenceName,\n        description: this.state.evidenceDescription,\n      };\n      const cid = await ipfsPublish(\"evidence.json\", this.encoder.encode(JSON.stringify(evidenceObj)));\n      const evidenceURI = `/ipfs/${cid[1].hash}${cid[0].path}`;\n      this.props.submitEvidence(Number(this.state.disputeId), evidenceURI);\n    } else {\n      alert(\"Enter valid dispute id.\");\n    }\n  };\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    this.setState({ fileName: file.name });\n    this.setState({ fileExtension: file.name.split(\".\")[1] });\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"p-4 pt-4\">\n        <p className=\"lead\">Submit Evidence For Claims :</p>\n        <form onSubmit={this.onFormSubmit}>\n          <div className=\"form-group mb-4 mt-4\">\n            <h5 className=\"text-capitalize\">Dispute Id :</h5>\n            <input\n              type=\"number\"\n              className=\"form-control border border-primary\"\n              style={{ width: \"27%\" }}\n              value={this.state.disputeId}\n              onChange={(e) => this.setState({ disputeId: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Evidence Name :</h5>\n            <input\n              type=\"text\"\n              className=\"form-control border border-primary\"\n              style={{ width: \"27%\" }}\n              value={this.state.evidenceName}\n              onChange={(e) => this.setState({ evidenceName: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Evidence Description :</h5>\n            <textarea\n              name=\"evidenceDescription\"\n              cols=\"30\"\n              rows=\"10\"\n              className=\"form-control border border-primary\"\n              value={this.state.evidenceDescription}\n              onChange={(e) => this.setState({ evidenceDescription: e.target.value })}\n            ></textarea>\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Upload Evidence :</h5>\n            <input type=\"file\" onChange={this.captureFile} className=\"form-control-file\" />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit Evidence\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport Archon from \"@kleros/archon\";\nimport ipfsPublish from \"../../IPFS/ipfsPublish\";\n\nconst web3 = new Web3();\n\nconst archon = new Archon(\"https://ropsten.infura.io/v3/2138913d0e324125bf671fafd93e186c\", \"https://ipfs.kleros.io\");\n// const archon = new Archon(\"http://127.0.0.1:7545\");\n\nexport default class CreateClaim extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planId: \"\",\n      buffer: null,\n      fileName: \"\",\n      fileExtension: \"\",\n      evidenceName: \"\",\n      evidenceDescription: \"\",\n      arbitrationFeeEth: \"\",\n    };\n    this.encoder = new TextEncoder();\n  }\n\n  componentDidMount = async () => {\n    const arbitrationFeeWei = await archon.arbitrator.getArbitrationCost(this.props.arbitratorContractAddress);\n    const arbitrationFeeEth = web3.utils.fromWei(arbitrationFeeWei, \"ether\");\n    this.setState({ arbitrationFeeEth });\n  };\n\n  onFormSubmit = async (e) => {\n    e.preventDefault();\n    if (\n      this.state.planId !== \"\" &&\n      this.state.planId !== null &&\n      Number(this.state.planId) !== 0 &&\n      Number(this.state.planId) > 0\n    ) {\n      this.props.setLoadingToTrue();\n      const fileCid = await ipfsPublish(this.state.fileName, this.state.buffer);\n      const fileURI = `/ipfs/${fileCid[1].hash}${fileCid[0].path}`;\n      const evidenceObj = {\n        fileURI,\n        fileHash: fileCid[1].hash,\n        fileTypeExtension: this.state.fileExtension,\n        name: this.state.evidenceName,\n        description: this.state.evidenceDescription,\n      };\n      const cid = await ipfsPublish(\"evidence.json\", this.encoder.encode(JSON.stringify(evidenceObj)));\n      const evidenceURI = `/ipfs/${cid[1].hash}${cid[0].path}`;\n      this.props.createClaim(Number(this.state.planId), evidenceURI);\n    } else {\n      alert(\"Enter valid plan id.\");\n    }\n  };\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    this.setState({ fileName: file.name });\n    this.setState({ fileExtension: file.name.split(\".\")[1] });\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"p-4 pt-4\">\n        <p className=\"lead\">Current Arbitration Fee :</p>\n        <h5 className=\"text-capitalize\">{this.state.arbitrationFeeEth} ETH</h5>\n        <p>\n          Make sure there is current arbitration fee worth of funds in the plan before trying to create a claim. If\n          there isn't enough funds in the plan, you can top up funds of the plan you are trying to claim{\" \"}\n          <Link to=\"/funds\">\n            <a className=\"font-weight-bold\">\n              <u>here</u>\n            </a>\n          </Link>\n          .\n        </p>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">Create Claim :</p>\n        <form onSubmit={this.onFormSubmit}>\n          <div className=\"form-group mb-4 mt-4\">\n            <h5 className=\"text-capitalize\">Plan Id :</h5>\n            <input\n              type=\"number\"\n              className=\"form-control border border-primary\"\n              style={{ width: \"27%\" }}\n              value={this.state.planId}\n              onChange={(e) => this.setState({ planId: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Evidence Name :</h5>\n            <input\n              type=\"text\"\n              className=\"form-control border border-primary\"\n              style={{ width: \"27%\" }}\n              value={this.state.evidenceName}\n              onChange={(e) => this.setState({ evidenceName: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Evidence Description :</h5>\n            <textarea\n              name=\"evidenceDescription\"\n              cols=\"30\"\n              rows=\"10\"\n              className=\"form-control border border-primary\"\n              value={this.state.evidenceDescription}\n              onChange={(e) => this.setState({ evidenceDescription: e.target.value })}\n            ></textarea>\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Upload Evidence :</h5>\n            <input type=\"file\" onChange={this.captureFile} className=\"form-control-file\" />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Create Claim\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","const ipfsPublish = async (fileName, data) => {\n  const buffer = await Buffer.from(data);\n\n  return new Promise((resolve, reject) => {\n    fetch(\"https://ipfs.kleros.io/add\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        fileName,\n        buffer,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((success) => resolve(success.data))\n      .catch((err) => reject(err));\n  });\n};\n\nexport default ipfsPublish;\n","import React from \"react\";\n\nconst ContractsNotDeployed = () => {\n  return (\n    <div className=\"jumbotron\">\n      <h4 style={{ textTransform: \"none\", fontWeight: \"normal\" }}>\n        SafexMain or AutoAppealableArbitrator Contract Not Deployed To This Network.\n      </h4>\n      <hr className=\"my-4\" />\n      <p className=\"lead\">Connect Metamask to Ropsten Testnet.</p>\n    </div>\n  );\n};\n\nexport default ContractsNotDeployed;\n","export default __webpack_public_path__ + \"static/media/metamask.09e5f554.svg\";","import React from \"react\";\nimport metamaskIcon from \"./metamask.svg\";\n\nconst ConnectToMetamask = ({ connectToMetamask }) => {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\" style={{ textTransform: \"capitalize\" }}>\n        Safex Claims\n      </h1>\n      <p className=\"lead\">\n        An implementation of kleros arbitrable and evidence compatible contract to create and rule disputes.\n      </p>\n      <hr className=\"my-4\" />\n      <button\n        onClick={connectToMetamask}\n        className=\"btn btn-primary d-flex align-items-center\"\n        style={{ fontSize: \"0.8rem\", letterSpacing: \"0.14rem\", fontWeight: \"normal\" }}\n      >\n        Connect To Metamask{\" \"}\n        <img src={metamaskIcon} alt=\"metamask-icon\" style={{ width: \"2rem\", marginLeft: \"0.5rem\" }} />\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectToMetamask;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3();\n\nexport default class SafexMainDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      safexMainBalanceEth: 0,\n      claimsAllowed: 0,\n    };\n  }\n\n  componentDidMount = async () => {\n    const safexMainBalanceWei = await this.props.safexMainContract.methods.getSafexMainContractBalance().call();\n    const safexMainBalanceEth = web3.utils.fromWei(safexMainBalanceWei, \"ether\");\n    this.setState({ safexMainBalanceEth });\n    const claimsAllowed = await this.props.safexMainContract.methods.getTotalClaimsAllowed().call();\n    this.setState({ claimsAllowed });\n  };\n\n  render() {\n    return (\n      <div className=\"p-4 pt-4\">\n        <p className=\"lead\">AutoAppealableArbitrator contract address :</p>\n        <h5>{this.props.arbitratorContractAddress}</h5>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">SafexMain contract address :</p>\n        <h5>{this.props.safexMainContractAddress}</h5>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">SafexMain balance :</p>\n        <h5>{this.state.safexMainBalanceEth} ETH</h5>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">No. of plans :</p>\n        <h5>{this.props.plansCount}</h5>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">No. of claims :</p>\n        <h5>{this.props.claimsCount}</h5>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">No. of claims allowed on a plan :</p>\n        <h5>{this.state.claimsAllowed}</h5>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport Archon from \"@kleros/archon\";\nimport ipfsPublish from \"../../IPFS/ipfsPublish\";\n\nconst web3 = new Web3();\n\nconst archon = new Archon(\"https://ropsten.infura.io/v3/2138913d0e324125bf671fafd93e186c\", \"https://ipfs.kleros.io\");\n// const archon = new Archon(\"http://127.0.0.1:7545\");\n\nexport default class CreatePlan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inheritorAddress: \"\",\n      arbitrationFeeWei: \"\",\n      arbitrationFeeEth: \"\",\n      extraFeeEth: \"\",\n      safexAgreementLink:\n        \"https://ipfs.kleros.io/ipfs/QmPMdGmenYuh9kzhU6WkEvRsWpr1B8T7nVWA52u6yoJu13/Safex Agreement.png\",\n      safexAgreementURI: \"/ipfs/QmPMdGmenYuh9kzhU6WkEvRsWpr1B8T7nVWA52u6yoJu13/Safex Agreement.png\",\n      buffer: null,\n      userHasCreatedPlan: false,\n    };\n    this.encoder = new TextEncoder();\n  }\n\n  componentDidMount = async () => {\n    const arbitrationFeeWei = await archon.arbitrator.getArbitrationCost(this.props.arbitratorContractAddress);\n    this.setState({ arbitrationFeeWei });\n    const arbitrationFeeEth = web3.utils.fromWei(arbitrationFeeWei, \"ether\");\n    this.setState({ arbitrationFeeEth });\n    const userHasCreatedPlan = await this.props.safexMainContract.methods\n      .hasCreatedPlan(this.props.accountAddress)\n      .call();\n    this.setState({ userHasCreatedPlan });\n  };\n\n  onFormSubmit = async (e) => {\n    e.preventDefault();\n    let totalPrice;\n    if (this.state.extraFeeEth !== 0 && this.state.extraFeeEth !== \"\" && this.state.extraFeeEth !== null) {\n      this.props.setLoadingToTrue();\n      const extraFeeWei = web3.utils.toWei(this.state.extraFeeEth, \"ether\");\n      const totalFunds = (Number(this.state.arbitrationFeeWei) + Number(extraFeeWei)).toString();\n      totalPrice = totalFunds;\n    } else {\n      this.props.setLoadingToTrue();\n      totalPrice = this.state.arbitrationFeeWei;\n    }\n    const metaevidenceObj = {\n      fileURI: this.state.safexAgreementURI,\n      fileHash: \"QmPMdGmenYuh9kzhU6WkEvRsWpr1B8T7nVWA52u6yoJu13\",\n      fileTypeExtension: \"png\",\n      category: \"Safex Claims\",\n      title: \"Provide a convenient and safe way to propose and claim the inheritance and safekeeping mechanism\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n      aliases: {\n        [this.props.safexMainContractAddress]: \"SafexMain\",\n        [this.props.accountAddress]: [this.props.accountAddress],\n      },\n      question: \"Does the claimer qualify for inheritence?\",\n      rulingOptions: {\n        type: \"single-select\",\n        titles: [\"Yes\", \"No\"],\n        descriptions: [\"The claimer is qualified for inheritence\", \"The claimer is not qualified for inheritence\"],\n      },\n    };\n    const cid = await ipfsPublish(\"metaEvidence.json\", this.encoder.encode(JSON.stringify(metaevidenceObj)));\n    const metaevidenceURI = `/ipfs/${cid[1].hash}${cid[0].path}`;\n    this.props.createPlan(this.state.inheritorAddress, metaevidenceURI, totalPrice);\n  };\n\n  render() {\n    return (\n      <div className=\"p-4 pt-4\">\n        {!this.state.userHasCreatedPlan ? (\n          <>\n            <p className=\"lead\">Required Minimum Funds To Create A Plan :</p>\n            <h5 className=\"text-capitalize\">\n              {this.state.arbitrationFeeEth} ETH <small>(Current Arbitration Fee)</small>\n            </h5>\n            <p>\n              Arbitration fee (subject to change in the future) is collected and stored in the plan. It can be used by\n              the inheritor to create a claim. Owner of the plan can recover funds in the plan at anytime{\" \"}\n              <Link to=\"/funds\">\n                <a className=\"font-weight-bold\">\n                  <u>here</u>\n                </a>\n              </Link>\n              .\n            </p>\n            <hr className=\"my-4\" />\n            <p className=\"lead\">Safex Agreement :</p>\n            <h5 className=\"text-lowercase\">\n              <a href={this.state.safexAgreementLink} target=\"_blank\">\n                Click Here 📎\n              </a>\n            </h5>\n            <hr className=\"my-4\" />\n            <p className=\"lead\">Create Plan :</p>\n            <form onSubmit={this.onFormSubmit}>\n              <div className=\"form-group mb-4 mt-4\">\n                <h5 className=\"text-capitalize\">Inheritor address :</h5>\n                <input\n                  type=\"text\"\n                  className=\"form-control border border-primary\"\n                  required\n                  style={{ width: \"27%\" }}\n                  value={this.state.inheritorAddress}\n                  onChange={(e) => this.setState({ inheritorAddress: e.target.value })}\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <h5 className=\"text-capitalize\">\n                  Add Extra Funds <small>(Optional)</small> :\n                </h5>\n                <input\n                  type=\"number\"\n                  className=\"form-control border border-primary\"\n                  style={{ width: \"27%\" }}\n                  value={this.state.extraFeeEth}\n                  onChange={(e) => this.setState({ extraFeeEth: e.target.value })}\n                />\n              </div>\n              <div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Create Plan\n                </button>\n              </div>\n            </form>\n          </>\n        ) : (\n          <div>\n            <p className=\"lead\">\n              You have already created a plan, you can view it{\" \"}\n              <Link to=\"/plans\">\n                <a className=\"font-weight-bold\">\n                  <u>here</u>\n                </a>\n              </Link>\n              .\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function MyAccount({ accountAddress, accountBalance }) {\n  return (\n    <div className=\"p-4 pt-4\">\n      <p className=\"lead\">Account address :</p>\n      <h5>{accountAddress}</h5>\n      <hr className=\"my-4\" />\n      <p className=\"lead\">Account balance :</p>\n      <h5>{accountBalance} ETH</h5>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n          <div className=\"container\">\n            <Link\n              to=\"/\"\n              className=\"navbar-brand ml-2\"\n              style={{ fontSize: \"1rem\", fontWeight: \"normal\", letterSpacing: \"0.2rem\" }}\n            >\n              Safex Claims\n            </Link>\n            <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div id=\"navbarNav\" className=\"collapse navbar-collapse\">\n              <ul\n                style={{ fontSize: \"0.8rem\", letterSpacing: \"0.2rem\", fontWeight: \"normal\" }}\n                className=\"navbar-nav ml-auto\"\n              >\n                <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Safex\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/my-account\" className=\"nav-link\">\n                    My Account\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/create-plan\" className=\"nav-link\">\n                    Create Plan\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/create-claim\" className=\"nav-link\">\n                    Create Claim\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/submit-evidence\" className=\"nav-link\">\n                    Submit Evidence\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/funds\" className=\"nav-link\">\n                    Funds\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/plans\" className=\"nav-link\">\n                    Plans\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/claims\" className=\"nav-link\">\n                    Claims\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/loading.dbb22bcf.gif\";","import React from \"react\";\nimport loadingGIF from \"./loading.gif\";\n\nconst Loader = () => {\n  return <img src={loadingGIF} alt=\"Loading..\" className=\"d-block m-auto\" />;\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport Archon from \"@kleros/archon\";\n\nconst archon = new Archon(\"https://ropsten.infura.io/v3/2138913d0e324125bf671fafd93e186c\", \"https://ipfs.kleros.io\");\n\nexport default class Claims extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myClaims: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const myClaims = this.props.claims.filter((claim) => claim.claimedBy === this.props.accountAddress);\n    this.setState({ myClaims });\n    const evidence = await archon.arbitrable.getEvidence(\n      this.props.safexMainContractAddress,\n      this.props.arbitratorContractAddress,\n      2\n    );\n    console.log(evidence);\n  };\n\n  render() {\n    return (\n      <div className=\"pt-4\">\n        <div className=\"accordion\">\n          <div className=\"card bg-secondary\">\n            <h5 className=\"card-header bg-dark\">\n              <a\n                href=\"#collapse1\"\n                data-parent=\"#accordion\"\n                data-toggle=\"collapse\"\n                className=\"text-decoration-none text-white\"\n              >\n                My Claim\n              </a>\n            </h5>\n            <div id=\"collapse1\" className=\"collapse show\">\n              {this.state.myClaims.length !== 0 ? (\n                <>\n                  {this.state.myClaims.map((claim) => {\n                    return (\n                      <div className=\"card-body\" key={claim.disputeId}>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Plan Id :</p>\n                            <h5>{claim.planId}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>Claimed By :</p>\n                            <h5>{claim.claimedBy}</h5>\n                          </div>\n                        </div>\n                        <hr className=\"my-2\" />\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Dispute Id :</p>\n                            <h5>{claim.disputeId}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>Metaevidence Id :</p>\n                            <h5>{claim.metaEvidenceId}</h5>\n                          </div>\n                        </div>\n                        <hr className=\"my-2\" />\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Evidence Group Id :</p>\n                            <h5>{claim.evidenceGroupId}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>Status :</p>\n                            <h5\n                              className={\n                                (claim.result === \"Active\" && \"bg-warning\") ||\n                                (claim.result === \"Passed\" && \"bg-success\") ||\n                                (claim.result === \"Failed\" && \"bg-danger\")\n                              }\n                              style={{ width: \"max-content\", color: \"#fff\", padding: \"0.6rem 1rem\" }}\n                            >\n                              {claim.result}\n                            </h5>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : (\n                <div className=\"pl-3 pt-3\">\n                  <p className=\"lead\">You don't have any active claims</p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"card bg-secondary\">\n            <h5 className=\"card-header bg-dark\">\n              <a\n                href=\"#collapse2\"\n                data-parent=\"#accordion\"\n                data-toggle=\"collapse\"\n                className=\"text-decoration-none text-white\"\n              >\n                All Claims\n              </a>\n            </h5>\n            <div id=\"collapse2\" className=\"collapse show\">\n              {this.props.claims.length !== 0 ? (\n                <table className=\"table text-center\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Plan Id</th>\n                      <th scope=\"col\">Claimed By</th>\n                      <th scope=\"col\">Dispute Id</th>\n                      <th scope=\"col\">MetaEvidence Id</th>\n                      <th scope=\"col\">Evidence Group Id</th>\n                      <th scope=\"col\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"font-weight-bold\">\n                    {this.props.claims.map((claim) => {\n                      return (\n                        <tr key={claim.disputeId}>\n                          <th scope=\"row\">{claim.planId}</th>\n                          <td>\n                            {claim.claimedBy.substr(0, 6) + \"....\" + claim.claimedBy.slice(claim.claimedBy.length - 6)}\n                          </td>\n                          <td>{claim.disputeId}</td>\n                          <td>{claim.metaEvidenceId}</td>\n                          <td>{claim.evidenceGroupId}</td>\n                          <td\n                            className={\n                              (claim.result === \"Active\" && \"bg-warning\") ||\n                              (claim.result === \"Passed\" && \"bg-success\") ||\n                              (claim.result === \"Failed\" && \"bg-danger\")\n                            }\n                            style={{ color: \"#fff\", padding: \"\" }}\n                          >\n                            {claim.result}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              ) : (\n                <div className=\"pl-3 pt-3\">\n                  <p className=\"lead\">No claims have been created</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3();\n\nexport default class Plans extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlans: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const myPlans = this.props.plans.filter((plan) => plan.planCurrentOwner === this.props.accountAddress);\n    this.setState({ myPlans });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-4\">\n        <div className=\"accordion\">\n          <div className=\"card bg-secondary\">\n            <h5 className=\"card-header bg-dark\">\n              <a\n                href=\"#collapse1\"\n                data-parent=\"#accordion\"\n                data-toggle=\"collapse\"\n                className=\"text-decoration-none text-white\"\n              >\n                My Plan\n              </a>\n            </h5>\n            <div id=\"collapse1\" className=\"collapse show\">\n              {this.state.myPlans.length !== 0 ? (\n                <>\n                  {this.state.myPlans.map((plan) => {\n                    return (\n                      <div className=\"card-body\" key={plan.planId}>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Plan Id :</p>\n                            <h5>{plan.planId}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>Created By :</p>\n                            <h5>{plan.planCreatedBy}</h5>\n                          </div>\n                        </div>\n                        <hr className=\"my-2\" />\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Owned By :</p>\n                            <h5>{plan.planCurrentOwner}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>Inheritor :</p>\n                            <h5>{plan.planInheritor}</h5>\n                          </div>\n                        </div>\n                        <hr className=\"my-2\" />\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Metaevidence Id :</p>\n                            <h5>{plan.metaEvidenceId}</h5>\n                          </div>\n                          <div className=\"col-6\">\n                            <p>No. of claims :</p>\n                            <h5>{plan.claimsCount}</h5>\n                          </div>\n                        </div>\n                        <hr className=\"my-2\" />\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <p>Funds :</p>\n                            <h5>{web3.utils.fromWei(plan.planFunds, \"ether\")} ETH</h5>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              ) : (\n                <div className=\"pl-3 pt-3\">\n                  <p className=\"lead\">You don't have any active plans</p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"card bg-secondary pb-0\">\n            <h5 className=\"card-header bg-dark\">\n              <a\n                href=\"#collapse2\"\n                data-parent=\"#accordion\"\n                data-toggle=\"collapse\"\n                className=\"text-decoration-none text-white\"\n              >\n                All Plans\n              </a>\n            </h5>\n            <div id=\"collapse2\" className=\"collapse show\">\n              {this.props.plans.length !== 0 ? (\n                <table className=\"table text-center\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Plan Id</th>\n                      <th scope=\"col\">Created By</th>\n                      <th scope=\"col\">Owned By</th>\n                      <th scope=\"col\">Inheritor</th>\n                      <th scope=\"col\">No. of claims</th>\n                      <th scope=\"col\">Funds</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"font-weight-bold\">\n                    {this.props.plans.map((plan) => {\n                      return (\n                        <tr key={plan.planId}>\n                          <th scope=\"row\">{plan.planId}</th>\n                          <td>\n                            {plan.planCreatedBy.substr(0, 5) +\n                              \"...\" +\n                              plan.planCreatedBy.slice(plan.planCreatedBy.length - 5)}\n                          </td>\n                          <td>\n                            {plan.planCurrentOwner.substr(0, 5) +\n                              \"...\" +\n                              plan.planCurrentOwner.slice(plan.planCurrentOwner.length - 5)}\n                          </td>\n                          <td>\n                            {plan.planInheritor.substr(0, 5) +\n                              \"...\" +\n                              plan.planInheritor.slice(plan.planInheritor.length - 5)}\n                          </td>\n                          <td>{plan.claimsCount}</td>\n                          <td>{web3.utils.fromWei(plan.planFunds, \"ether\")} ETH</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              ) : (\n                <div className=\"pl-3 pt-3\">\n                  <p className=\"lead\">No plans have been created</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3();\n\nexport default class Funds extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planId: \"\",\n      action: \"recover\",\n      fundPriceEth: \"\",\n    };\n  }\n\n  onFormSubmit = async (e) => {\n    e.preventDefault();\n    const planId = Number(this.state.planId);\n    const fund = Number(this.state.fundPriceEth);\n    if (planId > 0 === true && planId <= this.props.plansCount === true) {\n      if (this.state.action === \"recover\") {\n        this.props.recoverPlanFunds(planId);\n      } else if (this.state.action === \"deposit\") {\n        if (fund > 0 === true) {\n          this.props.depositPlanFunds(planId, Number(web3.utils.toWei(this.state.fundPriceEth, \"ether\")));\n          this.setState({ fundPriceEth: \"\" });\n        } else {\n          alert(\"Deposit fund should be more than 0!\");\n        }\n      }\n    } else {\n      alert(\"Enter valid plan id!\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"p-4 pt-4\">\n        <p className=\"lead\">Deposit Amount or Recover All Funds :</p>\n        <p>\n          Only owner of the plan can recover the funds in it. However, anybody can deposit funds in any of the existing\n          plans.\n        </p>\n        <form onSubmit={this.onFormSubmit}>\n          <div className=\"form-group mb-4 mt-4\">\n            <h5 className=\"text-capitalize\">Plan Id :</h5>\n            <input\n              type=\"number\"\n              className=\"form-control border border-primary\"\n              style={{ width: \"27%\" }}\n              value={this.state.planId}\n              onChange={(e) => this.setState({ planId: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <h5 className=\"text-capitalize\">Action :</h5>\n            <select\n              style={{ width: \"27%\" }}\n              value={this.state.action}\n              onChange={(e) => this.setState({ action: e.target.value })}\n              className=\"form-control border border-primary\"\n            >\n              <option value=\"deposit\">Deposit</option>\n              <option value=\"recover\">Recover</option>\n            </select>\n          </div>\n          {this.state.action === \"deposit\" ? (\n            <>\n              <div className=\"form-group mb-4 mt-4\">\n                <h5 className=\"text-capitalize\">Amount :</h5>\n                <input\n                  type=\"number\"\n                  className=\"form-control border border-primary\"\n                  style={{ width: \"27%\" }}\n                  value={this.state.fundPriceEth}\n                  onChange={(e) => this.setState({ fundPriceEth: e.target.value })}\n                />\n              </div>\n            </>\n          ) : null}\n          <div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {this.state.action === \"deposit\"\n                ? \"Deposit\"\n                : this.state.action === \"recover\"\n                ? \"Recover\"\n                : \"Select Action\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nimport AutoAppealableArbitrator from \"./contracts/AutoAppealableArbitrator.json\";\nimport SafexMain from \"./contracts/SafexMain.json\";\n\nimport ContractsNotDeployed from \"./components/ContractsNotDeployed/ContractsNotDeployed\";\nimport ConnectToMetamask from \"./components/ConnectToMetamask/ConnectToMetamask\";\nimport SafexMainDetails from \"./components/SafexMainDetails/SafexMainDetails\";\nimport SubmitEvidence from \"./components/SubmitEvidence/SubmitEvidence\";\nimport CreateClaim from \"./components/CreateClaim/CreateClaim\";\nimport CreatePlan from \"./components/CreatePlan/CreatePlan\";\nimport MyAccount from \"./components/MyAccount/MyAccount\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Loader from \"./components/Loader/Loader\";\nimport Claims from \"./components/Claims/Claims\";\nimport Plans from \"./components/Plans/Plans\";\nimport Funds from \"./components/Funds/Funds\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountAddress: \"\",\n      accountBalance: \"\",\n      plansCount: 0,\n      claimsCount: 0,\n      plans: [],\n      claims: [],\n      loading: true,\n      safexMainContract: null,\n      arbitratorContract: null,\n      safexMainContractAddress: \"\",\n      arbitratorContractAddress: \"\",\n      metamaskConnected: false,\n      contractsDetected: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  };\n\n  loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  };\n\n  loadBlockchainData = async () => {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    if (accounts.length === 0) {\n      this.setState({ metamaskConnected: false });\n    } else {\n      this.setState({ metamaskConnected: true });\n      this.setState({ loading: true });\n      this.setState({ accountAddress: accounts[0] });\n      let accountBalance = await web3.eth.getBalance(accounts[0]);\n      accountBalance = web3.utils.fromWei(accountBalance, \"Ether\");\n      this.setState({ accountBalance });\n      this.setState({ loading: false });\n      const networkId = await web3.eth.net.getId();\n      const networkDataSafexMain = SafexMain.networks[networkId];\n      const networkDataArbitrator = AutoAppealableArbitrator.networks[networkId];\n      if (networkDataSafexMain && networkDataArbitrator) {\n        this.setState({ loading: true });\n        this.setState({ safexMainContractAddress: networkDataSafexMain.address });\n        this.setState({ arbitratorContractAddress: networkDataArbitrator.address });\n        const safexMainContract = new web3.eth.Contract(SafexMain.abi, networkDataSafexMain.address);\n        const arbitratorContract = new web3.eth.Contract(AutoAppealableArbitrator.abi, networkDataArbitrator.address);\n        this.setState({ safexMainContract });\n        this.setState({ arbitratorContract });\n        this.setState({ contractsDetected: true });\n        const plansCount = await safexMainContract.methods.plansCount().call();\n        const claimsCount = await safexMainContract.methods.claimsCount().call();\n        this.setState({ plansCount });\n        this.setState({ claimsCount });\n        for (let i = 1; i <= plansCount; i++) {\n          const plan = await safexMainContract.methods.plans(i).call();\n          this.setState({\n            plans: [...this.state.plans, plan],\n          });\n        }\n        for (let i = 0; i < claimsCount; i++) {\n          const claim = await safexMainContract.methods.claims(i).call();\n          this.setState({\n            claims: [...this.state.claims, claim],\n          });\n        }\n        this.setState({ loading: false });\n      } else {\n        this.setState({ contractsDetected: false });\n      }\n    }\n  };\n\n  connectToMetamask = async () => {\n    await window.ethereum.enable();\n    this.setState({ metamaskConnected: true });\n    window.location.reload();\n  };\n\n  setLoadingToTrue = () => {\n    this.setState({ loading: true });\n  };\n\n  setLoadingToFalse = () => {\n    this.setState({ loading: false });\n  };\n\n  createPlan = async (_inheritor, _metaEvidence, _totalPrice) => {\n    this.state.safexMainContract.methods\n      .createPlan(_inheritor, _metaEvidence)\n      .send({ from: this.state.accountAddress, value: _totalPrice })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  createClaim = async (_planId, _evidence) => {\n    this.state.safexMainContract.methods\n      .createClaim(_planId, _evidence)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  submitEvidence = async (_disputeId, _evidence) => {\n    this.state.safexMainContract.methods\n      .submitEvidence(_disputeId, _evidence)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  recoverPlanFunds = async (_planId) => {\n    this.state.safexMainContract.methods\n      .recoverPlanFunds(_planId)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  depositPlanFunds = async (_planId, _depositAmount) => {\n    this.state.safexMainContract.methods\n      .depositPlanFunds(_planId)\n      .send({ from: this.state.accountAddress, value: _depositAmount })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {!this.state.metamaskConnected ? (\n          <ConnectToMetamask connectToMetamask={this.connectToMetamask} />\n        ) : !this.state.contractsDetected ? (\n          <ContractsNotDeployed />\n        ) : this.state.loading ? (\n          <Loader />\n        ) : (\n          <>\n            <HashRouter basename=\"/\">\n              <Navbar />\n              <Route\n                path=\"/\"\n                exact\n                render={() => (\n                  <SafexMainDetails\n                    safexMainContractAddress={this.state.safexMainContractAddress}\n                    arbitratorContractAddress={this.state.arbitratorContractAddress}\n                    plansCount={this.state.plansCount}\n                    claimsCount={this.state.claimsCount}\n                    safexMainContract={this.state.safexMainContract}\n                  />\n                )}\n              />\n              <Route\n                path=\"/my-account\"\n                render={() => (\n                  <MyAccount accountAddress={this.state.accountAddress} accountBalance={this.state.accountBalance} />\n                )}\n              />\n              <Route\n                path=\"/create-plan\"\n                render={() => (\n                  <CreatePlan\n                    arbitratorContractAddress={this.state.arbitratorContractAddress}\n                    safexMainContractAddress={this.state.safexMainContractAddress}\n                    safexMainContract={this.state.safexMainContract}\n                    accountAddress={this.state.accountAddress}\n                    setLoadingToTrue={this.setLoadingToTrue}\n                    createPlan={this.createPlan}\n                  />\n                )}\n              />\n              <Route\n                path=\"/create-claim\"\n                render={() => (\n                  <CreateClaim\n                    arbitratorContractAddress={this.state.arbitratorContractAddress}\n                    setLoadingToTrue={this.setLoadingToTrue}\n                    createClaim={this.createClaim}\n                  />\n                )}\n              />\n              <Route\n                path=\"/submit-evidence\"\n                render={() => (\n                  <SubmitEvidence setLoadingToTrue={this.setLoadingToTrue} submitEvidence={this.submitEvidence} />\n                )}\n              />\n              <Route\n                path=\"/funds\"\n                render={() => (\n                  <Funds\n                    setLoadingToTrue={this.setLoadingToTrue}\n                    plansCount={this.state.plansCount}\n                    recoverPlanFunds={this.recoverPlanFunds}\n                    depositPlanFunds={this.depositPlanFunds}\n                  />\n                )}\n              />\n              <Route\n                path=\"/plans\"\n                render={() => <Plans accountAddress={this.state.accountAddress} plans={this.state.plans} />}\n              />\n              <Route\n                path=\"/claims\"\n                render={() => (\n                  <Claims\n                    accountAddress={this.state.accountAddress}\n                    claims={this.state.claims}\n                    safexMainContractAddress={this.state.safexMainContractAddress}\n                    arbitratorContractAddress={this.state.arbitratorContractAddress}\n                  />\n                )}\n              />\n            </HashRouter>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bootstrap/bootstrap.min.css\";\nimport \"./CSS/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}